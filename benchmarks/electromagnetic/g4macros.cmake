#---Utility Macros----------------------------------------------------------
function(GET_NCPUS ncpu)
  if(APPLE)
    execute_process(COMMAND /usr/sbin/sysctl hw.ncpu 
                    OUTPUT_VARIABLE out RESULT_VARIABLE rc)
    if(NOT rc)
      string(REGEX MATCH "[0-9]+" n ${out})
    endif()
  elseif(UNIX)
    execute_process(COMMAND cat /proc/cpuinfo 
                    OUTPUT_VARIABLE out RESULT_VARIABLE rc)
    if(NOT rc)
      string(REGEX MATCHALL "processor" procs ${out})
      list(LENGTH procs n)
    endif()
  elseif(WIN32)
    set(n $ENV{NUMBER_OF_PROCESSORS})
  endif()
  if(DEFINED n)
    set(${ncpu} ${n} PARENT_SCOPE)
  else()
    set(${ncpu} 1 PARENT_SCOPE)
  endif()
endfunction()

function(GET_CONFIGURATION_TAG tag)
  #if(NOT $ENV{CMTCONFIG} STREQUAL "")
  #  set(${tag} $ENV{CMTCONFIG} PARENT_SCOPE)
  #  return()
  #endif()
  #---arch--------------
  if(UNIX)
    execute_process(COMMAND uname -p OUTPUT_VARIABLE arch OUTPUT_STRIP_TRAILING_WHITESPACE)
  else()
    set(arch $ENV{PROCESSOR_ARCHITECTURE})
  endif()
  #---os----------------
  if(APPLE)
    set(os mac)
    execute_process(COMMAND sw_vers "-productVersion" 
                    COMMAND cut -d . -f 1-2 
                    OUTPUT_VARIABLE osvers OUTPUT_STRIP_TRAILING_WHITESPACE)
    string(REPLACE "." "" osvers ${osvers})
  elseif(WIN32)
    set(os winxp)
    set(osvers)
  else()
    set(os  slc)
    set(osvers 5) 
  endif()  
  #---compiler-----------
  if(WIN32)
    find_program(compiler_cmd cl gcc)
  else()
    find_program(compiler_cmd gcc icc)
  endif()
  if(compiler_cmd MATCHES /cl)
    set(compiler vc)
    execute_process(COMMAND ${compiler_cmd} OUTPUT_VARIABLE versioninfo)
    string(REGEX REPLACE "^Version ([0-9]+)[.][0-9]+.*" "\\1" cvers "${versioninfo}")
  elseif(compiler_cmd MATCHES /gcc)
    set(compiler gcc)
    execute_process(COMMAND ${compiler_cmd} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
    string(REGEX MATCHALL "[0-9]+" GCC_VERSION_COMPONENTS ${GCC_VERSION})
    list(GET GCC_VERSION_COMPONENTS 0 GCC_MAJOR)
    list(GET GCC_VERSION_COMPONENTS 1 GCC_MINOR)
    set(cvers ${GCC_MAJOR}${GCC_MINOR})
  else()
    set(compiler)
    set(cvers)
  endif()
  set(${tag} ${arch}-${os}${osvers}-${compiler}${cvers} PARENT_SCOPE)
endfunction()

function(GET_PWD pwd)
  if(WIN32)
    execute_process(COMMAND cmd /c cd OUTPUT_VARIABLE p OUTPUT_STRIP_TRAILING_WHITESPACE)
  string(REPLACE "\\" "/" p ${p})
  else()
    set(p $ENV{PWD})
  endif()
  set(${pwd} ${p} PARENT_SCOPE)  
endfunction()

function(GET_HOST host)
  if(WIN32)
    set(h "$ENV{COMPUTERNAME}.$ENV{USERDNSDOMAIN}")
  else()
    execute_process(COMMAND hostname OUTPUT_VARIABLE h OUTPUT_STRIP_TRAILING_WHITESPACE)
  endif()
   set(${host} ${h} PARENT_SCOPE) 
endfunction() 

